{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\udinr\\\\OneDrive - MSFT\\\\ZeroToMastery\\\\ZTM_React\\\\Monster_Rolodex\\\\monsters-rolodex\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [searchString, setSearchField] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [updatedFilteredMonsters, setUpdatedFilteredMonsters] = useState([monsters]);\n  console.log('render');\n  const onTitleChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setTitle(searchFieldString);\n  };\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLocaleLowerCase();\n    setSearchField(searchFieldString);\n  };\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(resolveData => {\n      return resolveData.json();\n    }).then(users => {\n      return setMonsters(users);\n    });\n  }, []);\n  useEffect(() => {\n    const updatedMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchString);\n    });\n    setUpdatedFilteredMonsters(updatedMonsters);\n  }, [monsters, searchString]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: /*#__PURE__*/_jsxDEV(Hello, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onChangeHandler: onTitleChange //everytime there is a change this event gets called\n      ,\n      placeHolder: \"Write Title\",\n      className: \"monsters-search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onChangeHandler: onSearchChange //everytime there is a change this event gets called\n      ,\n      placeHolder: \"Search\",\n      className: \"monsters-search-box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: updatedFilteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QLyg0/m/iaiTnXoQHaW5+JHz5ss=\");\n_c = App;\nexport default App;\n\n// class App extends Component {\n\n//   constructor(){\n//     super();\n//     this.state = {\n//       monsters: [], \n//       searchValue: ''\n//     }\n//   }\n\n//   componentDidMount() {\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//     .then((resolveData) => {\n//       return resolveData.json()\n//     }) \n//     .then((users)=> {\n//       this.setState(() => {\n//         return {monsters: users}\n//       }, () => {\n//         return this.state.monsters\n//       })\n//     })\n//   }\n\n//   onSearchChange = (event) => {\n//     const searchString = event.target.value.toLocaleLowerCase()\n\n//     this.setState(() => {\n//      return {searchValue: searchString}\n//     })\n\n//   }\n\n//   render(){\n\n//     const {monsters, searchValue} = this.state; \n//     const {onSearchChange} = this; \n\n//     const updatedSearchValue = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchValue)\n//     })\n\n//     return <div className='App'>\n\n//       <SearchBox onChangeHandler = {onSearchChange} placeHolder='Search' className='monsters-search-box'/>\n\n//       <CardList monsters={updatedSearchValue}/>\n\n//     </div>\n\n//   }\n\n//}\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","CardList","SearchBox","jsxDEV","_jsxDEV","App","_s","title","setTitle","searchString","setSearchField","monsters","setMonsters","updatedFilteredMonsters","setUpdatedFilteredMonsters","console","log","onTitleChange","event","searchFieldString","target","value","toLocaleLowerCase","onSearchChange","fetch","then","resolveData","json","users","updatedMonsters","filter","monster","name","includes","className","children","Hello","fileName","_jsxFileName","lineNumber","columnNumber","onChangeHandler","placeHolder","_c","$RefreshReg$"],"sources":["C:/Users/udinr/OneDrive - MSFT/ZeroToMastery/ZTM_React/Monster_Rolodex/monsters-rolodex/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\n\nconst App = () => {\n  const [title, setTitle] = useState('')\n  const [searchString, setSearchField] = useState('')\n  const [monsters, setMonsters] = useState([])\n  const [updatedFilteredMonsters, setUpdatedFilteredMonsters] = useState([monsters])\n  \n  console.log('render')\n\n  const onTitleChange = (event) => {\n    const searchFieldString = event.target.value.toLocaleLowerCase()\n    setTitle(searchFieldString)\n  }\n\n  const onSearchChange = (event) => {\n    const searchFieldString = event.target.value.toLocaleLowerCase()\n    setSearchField(searchFieldString)\n  }\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((resolveData) => {\n      return resolveData.json()\n    }) \n    .then((users) => {\n      return setMonsters(users)\n    })\n  }, [])\n\n  useEffect(() => {\n    const updatedMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchString)\n    })\n\n    setUpdatedFilteredMonsters(updatedMonsters)\n  }, [monsters, searchString])\n\n  return(\n    <div className='App'>\n        <title><Hello></Hello></title>\n\n        <SearchBox \n        onChangeHandler = {onTitleChange} //everytime there is a change this event gets called\n        placeHolder='Write Title' \n        className='monsters-search-box'/>\n\n       <SearchBox \n        onChangeHandler = {onSearchChange} //everytime there is a change this event gets called\n        placeHolder='Search' \n        className='monsters-search-box'/>\n\n       <CardList monsters={updatedFilteredMonsters}/>\n\n     </div>\n  )\n}\n\nexport default App;\n\n\n// class App extends Component {\n\n//   constructor(){\n//     super();\n//     this.state = {\n//       monsters: [], \n//       searchValue: ''\n//     }\n//   }\n\n//   componentDidMount() {\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//     .then((resolveData) => {\n//       return resolveData.json()\n//     }) \n//     .then((users)=> {\n//       this.setState(() => {\n//         return {monsters: users}\n//       }, () => {\n//         return this.state.monsters\n//       })\n//     })\n//   }\n\n//   onSearchChange = (event) => {\n//     const searchString = event.target.value.toLocaleLowerCase()\n\n//     this.setState(() => {\n//      return {searchValue: searchString}\n//     })\n\n//   }\n  \n\n//   render(){\n\n//     const {monsters, searchValue} = this.state; \n//     const {onSearchChange} = this; \n\n//     const updatedSearchValue = monsters.filter((monster) => {\n//       return monster.name.toLocaleLowerCase().includes(searchValue)\n//     })\n\n//     return <div className='App'>\n      \n//       <SearchBox onChangeHandler = {onSearchChange} placeHolder='Search' className='monsters-search-box'/>\n\n//       <CardList monsters={updatedSearchValue}/>\n\n//     </div>\n\n//   }\n\n//}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}